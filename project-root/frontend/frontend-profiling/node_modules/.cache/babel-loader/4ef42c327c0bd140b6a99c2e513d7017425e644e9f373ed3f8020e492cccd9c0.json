{"ast":null,"code":"import { ref } from 'vue';\nimport NavigationBar from './components/NavigationBar.vue';\nimport SearchBar from './components/SearchBar.vue';\nimport EmailList from './components/EmailList.vue';\nimport EmailDetail from './components/EmailDetail.vue';\nimport emailService from './services/EmailService';\nexport default {\n  name: 'App',\n  components: {\n    NavigationBar,\n    SearchBar,\n    EmailList,\n    EmailDetail\n  },\n  setup() {\n    const emails = ref([]);\n    const selectedEmail = ref(null);\n    const searchQuery = ref('');\n    const loading = ref(false);\n    const error = ref(null);\n    const loadEmails = async () => {\n      try {\n        loading.value = true;\n        const response = await emailService.getAll();\n        emails.value = response;\n      } catch (err) {\n        error.value = 'Error al cargar los emails';\n        console.error(err);\n      } finally {\n        loading.value = false;\n      }\n    };\n    const selectEmail = email => {\n      selectedEmail.value = email;\n    };\n    const handleSearch = async () => {\n      try {\n        loading.value = true;\n        if (searchQuery.value.trim()) {\n          const response = await emailService.search(searchQuery.value);\n          emails.value = response;\n        } else {\n          await loadEmails();\n        }\n      } catch (err) {\n        error.value = 'Error en la búsqueda';\n        console.error(err);\n      } finally {\n        loading.value = false;\n      }\n    };\n\n    // Cargar emails al iniciar\n    loadEmails();\n    return {\n      emails,\n      selectedEmail,\n      searchQuery,\n      loading,\n      error,\n      selectEmail,\n      handleSearch\n    };\n  }\n};","map":{"version":3,"names":["ref","NavigationBar","SearchBar","EmailList","EmailDetail","emailService","name","components","setup","emails","selectedEmail","searchQuery","loading","error","loadEmails","value","response","getAll","err","console","selectEmail","email","handleSearch","trim","search"],"sources":["D:\\Documentos\\GitHub\\GoProfiling\\GoProfiling\\project-root\\frontend\\frontend-profiling\\src\\App.vue"],"sourcesContent":["<template>\r\n  <div class=\"app\">\r\n    <NavigationBar />\r\n    \r\n    <main class=\"main-content\">\r\n      <SearchBar \r\n        v-model=\"searchQuery\"\r\n        @update:modelValue=\"handleSearch\"\r\n      />\r\n\r\n      <div v-if=\"loading\" class=\"loading\">\r\n        <div class=\"loader\"></div>\r\n      </div>\r\n\r\n      <div v-else-if=\"error\" class=\"error\">\r\n        {{ error }}\r\n      </div>\r\n\r\n      <div v-else class=\"email-container\">\r\n        <EmailList \r\n          :emails=\"emails\"\r\n          @select=\"selectEmail\"\r\n        />\r\n        <EmailDetail \r\n          :email=\"selectedEmail\"\r\n        />\r\n      </div>\r\n    </main>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { ref } from 'vue'\r\nimport NavigationBar from './components/NavigationBar.vue'\r\nimport SearchBar from './components/SearchBar.vue'\r\nimport EmailList from './components/EmailList.vue'\r\nimport EmailDetail from './components/EmailDetail.vue'\r\nimport emailService from './services/EmailService'\r\n\r\nexport default {\r\n  name: 'App',\r\n  components: {\r\n    NavigationBar,\r\n    SearchBar,\r\n    EmailList,\r\n    EmailDetail\r\n  },\r\n  setup() {\r\n    const emails = ref([])\r\n    const selectedEmail = ref(null)\r\n    const searchQuery = ref('')\r\n    const loading = ref(false)\r\n    const error = ref(null)\r\n\r\n    const loadEmails = async () => {\r\n      try {\r\n        loading.value = true\r\n        const response = await emailService.getAll()\r\n        emails.value = response\r\n      } catch (err) {\r\n        error.value = 'Error al cargar los emails'\r\n        console.error(err)\r\n      } finally {\r\n        loading.value = false\r\n      }\r\n    }\r\n\r\n    const selectEmail = (email) => {\r\n      selectedEmail.value = email\r\n    }\r\n\r\n    const handleSearch = async () => {\r\n      try {\r\n        loading.value = true\r\n        if (searchQuery.value.trim()) {\r\n          const response = await emailService.search(searchQuery.value)\r\n          emails.value = response\r\n        } else {\r\n          await loadEmails()\r\n        }\r\n      } catch (err) {\r\n        error.value = 'Error en la búsqueda'\r\n        console.error(err)\r\n      } finally {\r\n        loading.value = false\r\n      }\r\n    }\r\n\r\n    // Cargar emails al iniciar\r\n    loadEmails()\r\n\r\n    return {\r\n      emails,\r\n      selectedEmail,\r\n      searchQuery,\r\n      loading,\r\n      error,\r\n      selectEmail,\r\n      handleSearch\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style>\r\n/* Estilos globales */\r\n* {\r\n  margin: 0;\r\n  padding: 0;\r\n  box-sizing: border-box;\r\n}\r\n\r\nbody {\r\n  font-family: Arial, sans-serif;\r\n  background-color: #f7f8fa;\r\n  color: #2d3748;\r\n}\r\n\r\n.app {\r\n  min-height: 100vh;\r\n}\r\n\r\n.main-content {\r\n  max-width: 1200px;\r\n  margin: 0 auto;\r\n  padding: 2rem 1rem;\r\n}\r\n\r\n.email-container {\r\n  display: grid;\r\n  grid-template-columns: 1fr 1fr;\r\n  gap: 1.5rem;\r\n}\r\n\r\n.loading {\r\n  text-align: center;\r\n  padding: 2rem;\r\n}\r\n\r\n.loader {\r\n  display: inline-block;\r\n  width: 2rem;\r\n  height: 2rem;\r\n  border: 2px solid #e2e8f0;\r\n  border-radius: 50%;\r\n  border-top-color: #00003e;\r\n  animation: spin 1s linear infinite;\r\n}\r\n\r\n.error {\r\n  background-color: #fff5f5;\r\n  border-left: 4px solid #f56565;\r\n  padding: 1rem;\r\n  margin-bottom: 1.5rem;\r\n  color: #c53030;\r\n}\r\n\r\n@keyframes spin {\r\n  to {\r\n    transform: rotate(360deg);\r\n  }\r\n}\r\n\r\n@media (max-width: 768px) {\r\n  .email-container {\r\n    grid-template-columns: 1fr;\r\n  }\r\n}\r\n</style>"],"mappings":"AAgCA,SAASA,GAAE,QAAS,KAAI;AACxB,OAAOC,aAAY,MAAO,gCAA+B;AACzD,OAAOC,SAAQ,MAAO,4BAA2B;AACjD,OAAOC,SAAQ,MAAO,4BAA2B;AACjD,OAAOC,WAAU,MAAO,8BAA6B;AACrD,OAAOC,YAAW,MAAO,yBAAwB;AAEjD,eAAe;EACbC,IAAI,EAAE,KAAK;EACXC,UAAU,EAAE;IACVN,aAAa;IACbC,SAAS;IACTC,SAAS;IACTC;EACF,CAAC;EACDI,KAAKA,CAAA,EAAG;IACN,MAAMC,MAAK,GAAIT,GAAG,CAAC,EAAE;IACrB,MAAMU,aAAY,GAAIV,GAAG,CAAC,IAAI;IAC9B,MAAMW,WAAU,GAAIX,GAAG,CAAC,EAAE;IAC1B,MAAMY,OAAM,GAAIZ,GAAG,CAAC,KAAK;IACzB,MAAMa,KAAI,GAAIb,GAAG,CAAC,IAAI;IAEtB,MAAMc,UAAS,GAAI,MAAAA,CAAA,KAAY;MAC7B,IAAI;QACFF,OAAO,CAACG,KAAI,GAAI,IAAG;QACnB,MAAMC,QAAO,GAAI,MAAMX,YAAY,CAACY,MAAM,CAAC;QAC3CR,MAAM,CAACM,KAAI,GAAIC,QAAO;MACxB,EAAE,OAAOE,GAAG,EAAE;QACZL,KAAK,CAACE,KAAI,GAAI,4BAA2B;QACzCI,OAAO,CAACN,KAAK,CAACK,GAAG;MACnB,UAAU;QACRN,OAAO,CAACG,KAAI,GAAI,KAAI;MACtB;IACF;IAEA,MAAMK,WAAU,GAAKC,KAAK,IAAK;MAC7BX,aAAa,CAACK,KAAI,GAAIM,KAAI;IAC5B;IAEA,MAAMC,YAAW,GAAI,MAAAA,CAAA,KAAY;MAC/B,IAAI;QACFV,OAAO,CAACG,KAAI,GAAI,IAAG;QACnB,IAAIJ,WAAW,CAACI,KAAK,CAACQ,IAAI,CAAC,CAAC,EAAE;UAC5B,MAAMP,QAAO,GAAI,MAAMX,YAAY,CAACmB,MAAM,CAACb,WAAW,CAACI,KAAK;UAC5DN,MAAM,CAACM,KAAI,GAAIC,QAAO;QACxB,OAAO;UACL,MAAMF,UAAU,CAAC;QACnB;MACF,EAAE,OAAOI,GAAG,EAAE;QACZL,KAAK,CAACE,KAAI,GAAI,sBAAqB;QACnCI,OAAO,CAACN,KAAK,CAACK,GAAG;MACnB,UAAU;QACRN,OAAO,CAACG,KAAI,GAAI,KAAI;MACtB;IACF;;IAEA;IACAD,UAAU,CAAC;IAEX,OAAO;MACLL,MAAM;MACNC,aAAa;MACbC,WAAW;MACXC,OAAO;MACPC,KAAK;MACLO,WAAW;MACXE;IACF;EACF;AACF","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}