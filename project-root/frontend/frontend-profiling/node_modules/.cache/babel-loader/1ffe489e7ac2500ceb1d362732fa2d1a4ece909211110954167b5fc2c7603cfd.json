{"ast":null,"code":"import api from './api';\nexport default {\n  // Obtener todos los emails\n  async getAll() {\n    try {\n      const response = await api.get('/emails');\n      return response.data.hits.hits; // Extraer los emails de la estructura correcta\n    } catch (error) {\n      console.error('Error fetching emails:', error);\n      throw error;\n    }\n  },\n  // Buscar emails\n  async search(query) {\n    try {\n      const response = await api.get(`/search?q=${encodeURIComponent(query)}`);\n      return response.data.hits.hits; // Extraer los emails de la estructura correcta\n    } catch (error) {\n      console.error('Error searching emails:', error);\n      throw error;\n    }\n  },\n  // Obtener un email por ID\n  async getById(id) {\n    try {\n      const response = await api.get(`/emails/${id}`);\n      return response.data;\n    } catch (error) {\n      console.error('Error fetching email:', error);\n      throw error;\n    }\n  },\n  // Crear un nuevo email\n  async create(emailData) {\n    try {\n      const response = await api.post('/emails', emailData);\n      return response.data;\n    } catch (error) {\n      console.error('Error creating email:', error);\n      throw error;\n    }\n  },\n  // Actualizar un email\n  async update(id, emailData) {\n    try {\n      const response = await api.put(`/emails/${id}`, emailData);\n      return response.data;\n    } catch (error) {\n      console.error('Error updating email:', error);\n      throw error;\n    }\n  },\n  // Eliminar un email\n  async delete(id) {\n    try {\n      const response = await api.delete(`/emails/${id}`);\n      return response.data;\n    } catch (error) {\n      console.error('Error deleting email:', error);\n      throw error;\n    }\n  }\n};","map":{"version":3,"names":["api","getAll","response","get","data","hits","error","console","search","query","encodeURIComponent","getById","id","create","emailData","post","update","put","delete"],"sources":["D:/Documentos/GitHub/GoProfiling/GoProfiling/project-root/frontend/frontend-profiling/src/services/EmailService.js"],"sourcesContent":["import api from './api'\r\n\r\nexport default {\r\n  // Obtener todos los emails\r\n  async getAll() {\r\n    try {\r\n      const response = await api.get('/emails')\r\n      return response.data.hits.hits // Extraer los emails de la estructura correcta\r\n    } catch (error) {\r\n      console.error('Error fetching emails:', error)\r\n      throw error\r\n    }\r\n  },\r\n  // Buscar emails\r\n  async search(query) {\r\n    try {\r\n      const response = await api.get(`/search?q=${encodeURIComponent(query)}`)\r\n      return response.data.hits.hits // Extraer los emails de la estructura correcta\r\n    } catch (error) {\r\n      console.error('Error searching emails:', error)\r\n      throw error\r\n    }\r\n  },\r\n\r\n  // Obtener un email por ID\r\n  async getById(id) {\r\n    try {\r\n      const response = await api.get(`/emails/${id}`)\r\n      return response.data\r\n    } catch (error) {\r\n      console.error('Error fetching email:', error)\r\n      throw error\r\n    }\r\n  },\r\n\r\n  // Crear un nuevo email\r\n  async create(emailData) {\r\n    try {\r\n      const response = await api.post('/emails', emailData)\r\n      return response.data\r\n    } catch (error) {\r\n      console.error('Error creating email:', error)\r\n      throw error\r\n    }\r\n  },\r\n\r\n  // Actualizar un email\r\n  async update(id, emailData) {\r\n    try {\r\n      const response = await api.put(`/emails/${id}`, emailData)\r\n      return response.data\r\n    } catch (error) {\r\n      console.error('Error updating email:', error)\r\n      throw error\r\n    }\r\n  },\r\n\r\n  // Eliminar un email\r\n  async delete(id) {\r\n    try {\r\n      const response = await api.delete(`/emails/${id}`)\r\n      return response.data\r\n    } catch (error) {\r\n      console.error('Error deleting email:', error)\r\n      throw error\r\n    }\r\n  }\r\n}"],"mappings":"AAAA,OAAOA,GAAG,MAAM,OAAO;AAEvB,eAAe;EACb;EACA,MAAMC,MAAMA,CAAA,EAAG;IACb,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAMF,GAAG,CAACG,GAAG,CAAC,SAAS,CAAC;MACzC,OAAOD,QAAQ,CAACE,IAAI,CAACC,IAAI,CAACA,IAAI,EAAC;IACjC,CAAC,CAAC,OAAOC,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,wBAAwB,EAAEA,KAAK,CAAC;MAC9C,MAAMA,KAAK;IACb;EACF,CAAC;EACD;EACA,MAAME,MAAMA,CAACC,KAAK,EAAE;IAClB,IAAI;MACF,MAAMP,QAAQ,GAAG,MAAMF,GAAG,CAACG,GAAG,CAAC,aAAaO,kBAAkB,CAACD,KAAK,CAAC,EAAE,CAAC;MACxE,OAAOP,QAAQ,CAACE,IAAI,CAACC,IAAI,CAACA,IAAI,EAAC;IACjC,CAAC,CAAC,OAAOC,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,yBAAyB,EAAEA,KAAK,CAAC;MAC/C,MAAMA,KAAK;IACb;EACF,CAAC;EAED;EACA,MAAMK,OAAOA,CAACC,EAAE,EAAE;IAChB,IAAI;MACF,MAAMV,QAAQ,GAAG,MAAMF,GAAG,CAACG,GAAG,CAAC,WAAWS,EAAE,EAAE,CAAC;MAC/C,OAAOV,QAAQ,CAACE,IAAI;IACtB,CAAC,CAAC,OAAOE,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAAC;MAC7C,MAAMA,KAAK;IACb;EACF,CAAC;EAED;EACA,MAAMO,MAAMA,CAACC,SAAS,EAAE;IACtB,IAAI;MACF,MAAMZ,QAAQ,GAAG,MAAMF,GAAG,CAACe,IAAI,CAAC,SAAS,EAAED,SAAS,CAAC;MACrD,OAAOZ,QAAQ,CAACE,IAAI;IACtB,CAAC,CAAC,OAAOE,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAAC;MAC7C,MAAMA,KAAK;IACb;EACF,CAAC;EAED;EACA,MAAMU,MAAMA,CAACJ,EAAE,EAAEE,SAAS,EAAE;IAC1B,IAAI;MACF,MAAMZ,QAAQ,GAAG,MAAMF,GAAG,CAACiB,GAAG,CAAC,WAAWL,EAAE,EAAE,EAAEE,SAAS,CAAC;MAC1D,OAAOZ,QAAQ,CAACE,IAAI;IACtB,CAAC,CAAC,OAAOE,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAAC;MAC7C,MAAMA,KAAK;IACb;EACF,CAAC;EAED;EACA,MAAMY,MAAMA,CAACN,EAAE,EAAE;IACf,IAAI;MACF,MAAMV,QAAQ,GAAG,MAAMF,GAAG,CAACkB,MAAM,CAAC,WAAWN,EAAE,EAAE,CAAC;MAClD,OAAOV,QAAQ,CAACE,IAAI;IACtB,CAAC,CAAC,OAAOE,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAAC;MAC7C,MAAMA,KAAK;IACb;EACF;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}