{"ast":null,"code":"import { resolveComponent as _resolveComponent, createVNode as _createVNode, createElementVNode as _createElementVNode, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, toDisplayString as _toDisplayString } from \"vue\";\nconst _hoisted_1 = {\n  class: \"min-h-screen bg-gray-50\"\n};\nconst _hoisted_2 = {\n  class: \"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-8\"\n};\nconst _hoisted_3 = {\n  key: 0,\n  class: \"text-center py-8\"\n};\nconst _hoisted_4 = {\n  key: 1,\n  class: \"bg-red-50 border-l-4 border-red-500 p-4 mb-6\"\n};\nconst _hoisted_5 = {\n  key: 2,\n  class: \"grid grid-cols-1 lg:grid-cols-2 gap-6\"\n};\nexport function render(_ctx, _cache) {\n  const _component_Navbar = _resolveComponent(\"Navbar\");\n  const _component_SearchBar = _resolveComponent(\"SearchBar\");\n  const _component_EmailList = _resolveComponent(\"EmailList\");\n  const _component_EmailDetail = _resolveComponent(\"EmailDetail\");\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createVNode(_component_Navbar), _createElementVNode(\"div\", _hoisted_2, [_createVNode(_component_SearchBar, {\n    modelValue: _ctx.searchQuery,\n    \"onUpdate:modelValue\": [_cache[0] || (_cache[0] = $event => _ctx.searchQuery = $event), _ctx.handleSearch]\n  }, null, 8 /* PROPS */, [\"modelValue\", \"onUpdate:modelValue\"]), _ctx.loading ? (_openBlock(), _createElementBlock(\"div\", _hoisted_3, _cache[1] || (_cache[1] = [_createElementVNode(\"div\", {\n    class: \"animate-spin rounded-full h-8 w-8 border-b-2 border-primary mx-auto\"\n  }, null, -1 /* HOISTED */)]))) : _ctx.error ? (_openBlock(), _createElementBlock(\"div\", _hoisted_4, _toDisplayString(_ctx.error), 1 /* TEXT */)) : (_openBlock(), _createElementBlock(\"div\", _hoisted_5, [_createVNode(_component_EmailList, {\n    emails: _ctx.emails,\n    onSelect: _ctx.selectEmail\n  }, null, 8 /* PROPS */, [\"emails\", \"onSelect\"]), _createVNode(_component_EmailDetail, {\n    email: _ctx.selectedEmail\n  }, null, 8 /* PROPS */, [\"email\"])]))])]);\n}","map":{"version":3,"names":["class","key","_createElementBlock","_hoisted_1","_createVNode","_component_Navbar","_createElementVNode","_hoisted_2","_component_SearchBar","modelValue","_ctx","searchQuery","$event","handleSearch","loading","_hoisted_3","_cache","error","_hoisted_4","_toDisplayString","_hoisted_5","_component_EmailList","emails","onSelect","selectEmail","_component_EmailDetail","email","selectedEmail"],"sources":["D:\\Documentos\\GitHub\\GoProfiling\\GoProfiling\\project-root\\frontend\\frontend-profiling\\src\\App.vue"],"sourcesContent":["<template>\r\n  <div class=\"min-h-screen bg-gray-50\">\r\n    <Navbar />\r\n    \r\n    <div class=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-8\">\r\n      <SearchBar \r\n        v-model=\"searchQuery\"\r\n        @update:modelValue=\"handleSearch\"\r\n      />\r\n\r\n      <div v-if=\"loading\" class=\"text-center py-8\">\r\n        <div class=\"animate-spin rounded-full h-8 w-8 border-b-2 border-primary mx-auto\"></div>\r\n      </div>\r\n\r\n      <div v-else-if=\"error\" class=\"bg-red-50 border-l-4 border-red-500 p-4 mb-6\">\r\n        {{ error }}\r\n      </div>\r\n\r\n      <div v-else class=\"grid grid-cols-1 lg:grid-cols-2 gap-6\">\r\n        <EmailList \r\n          :emails=\"emails\"\r\n          @select=\"selectEmail\"\r\n        />\r\n        <EmailDetail \r\n          :email=\"selectedEmail\"\r\n        />\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { ref } from 'vue'\r\nimport Navbar from './components/Navbar.vue'\r\nimport SearchBar from './components/SearchBar.vue'\r\nimport EmailList from './components/EmailList.vue'\r\nimport EmailDetail from './components/EmailDetail.vue'\r\nimport emailService from './services/emailService'\r\n\r\ncomponents: {\r\n    NavigationBar,\r\n    SearchBar,\r\n    EmailList,\r\n    EmailDetail\r\n  },\r\n  setup() {\r\n    const emails = ref([])\r\n    const selectedEmail = ref(null)\r\n    const searchQuery = ref('')\r\n    const loading = ref(false)\r\n    const error = ref(null)\r\n\r\n    const loadEmails = async () => {\r\n      try {\r\n        loading.value = true\r\n        const response = await emailService.getAll()\r\n        emails.value = response\r\n      } catch (err) {\r\n        error.value = 'Error al cargar los emails'\r\n        console.error(err)\r\n      } finally {\r\n        loading.value = false\r\n      }\r\n    }\r\n\r\n    const selectEmail = (email) => {\r\n      selectedEmail.value = email\r\n    }\r\n\r\n    const handleSearch = async () => {\r\n      try {\r\n        loading.value = true\r\n        if (searchQuery.value.trim()) {\r\n          const response = await emailService.search(searchQuery.value)\r\n          emails.value = response\r\n        } else {\r\n          await loadEmails()\r\n        }\r\n      } catch (err) {\r\n        error.value = 'Error en la b√∫squeda'\r\n        console.error(err)\r\n      } finally {\r\n        loading.value = false\r\n      }\r\n    }\r\n\r\n    // Cargar emails al iniciar\r\n    loadEmails()\r\n\r\n    return {\r\n      emails,\r\n      selectedEmail,\r\n      searchQuery,\r\n      loading,\r\n      error,\r\n      selectEmail,\r\n      handleSearch\r\n    }\r\n  }\r\n}\r\n</script>"],"mappings":";;EACOA,KAAK,EAAC;AAAyB;;EAG7BA,KAAK,EAAC;AAA6C;;EAJ5DC,GAAA;EAU0BD,KAAK,EAAC;;;EAVhCC,GAAA;EAc6BD,KAAK,EAAC;;;EAdnCC,GAAA;EAkBkBD,KAAK,EAAC;;;;;;;uBAjBtBE,mBAAA,CA2BM,OA3BNC,UA2BM,GA1BJC,YAAA,CAAUC,iBAAA,GAEVC,mBAAA,CAuBM,OAvBNC,UAuBM,GAtBJH,YAAA,CAGEI,oBAAA;IARRC,UAAA,EAMiBC,IAAA,CAAAC,WAAW;IAN5B,wB,oCAMiBD,IAAA,CAAAC,WAAW,GAAAC,MAAA,GACAF,IAAA,CAAAG,YAAY;kEAGvBH,IAAA,CAAAI,OAAO,I,cAAlBZ,mBAAA,CAEM,OAFNa,UAEM,EAAAC,MAAA,QAAAA,MAAA,OADJV,mBAAA,CAAuF;IAAlFN,KAAK,EAAC;EAAqE,2B,MAGlEU,IAAA,CAAAO,KAAK,I,cAArBf,mBAAA,CAEM,OAFNgB,UAEM,EAAAC,gBAAA,CADDT,IAAA,CAAAO,KAAK,qB,cAGVf,mBAAA,CAQM,OARNkB,UAQM,GAPJhB,YAAA,CAGEiB,oBAAA;IAFCC,MAAM,EAAEZ,IAAA,CAAAY,MAAM;IACdC,QAAM,EAAEb,IAAA,CAAAc;mDAEXpB,YAAA,CAEEqB,sBAAA;IADCC,KAAK,EAAEhB,IAAA,CAAAiB;EAAa,mC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}